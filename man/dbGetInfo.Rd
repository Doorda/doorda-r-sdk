% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbGetInfo.R
\name{dbGetInfo,DoordaHostDriver-method}
\alias{dbGetInfo,DoordaHostDriver-method}
\alias{dbGetInfo,DoordaHostConnection-method}
\alias{dbGetInfo,DoordaHostResult-method}
\title{Metadata about database objects}
\usage{
\S4method{dbGetInfo}{DoordaHostDriver}(dbObj)

\S4method{dbGetInfo}{DoordaHostConnection}(dbObj)

\S4method{dbGetInfo}{DoordaHostResult}(dbObj)
}
\arguments{
\item{dbObj}{A \code{\linkS4class{DoordaHostDriver}},
\code{\linkS4class{DoordaHostConnection}}
or \code{\linkS4class{DoordaHostResult}} object}
}
\value{
[DoordaHostResult] A \code{\link{list}} with elements
  \describe{
    \item{statement}{The SQL sent to the database}
    \item{row.count}{Number of rows fetched so far}
    \item{has.completed}{Whether all data has been fetched}
    \item{stats}{Current stats on the query}
  }
}
\description{
Metadata about database objects

For the \code{\linkS4class{DoordaHostResult}} object, the implementation
returns the additional \code{stats} field which can be used to
implement things like progress bars. See the examples section.
}
\examples{
\dontrun{
  conn <- dbConnect(DoordaHost(), 'localhost', 7777, 'onur', 'datascience')
  result <- dbSendQuery(conn, 'SELECT * FROM jonchang_iris')
  iris <- data.frame()
  progress.bar <- NULL
  while (!dbHasCompleted(result)) {
    chunk <- dbFetch(result)
    if (!NROW(iris)) {
      iris <- chunk
    } else if (NROW(chunk)) {
      iris <- rbind(iris, chunk)
    }
    stats <- dbGetInfo(result)[['stats']]
    if (is.null(progress.bar)) {
      progress.bar <- txtProgressBar(0, stats[['totalSplits']], style=3)
    } else {
      setTxtProgressBar(progress.bar, stats[['completedSplits']])
    }
  }
  close(progress.bar)
}
}
